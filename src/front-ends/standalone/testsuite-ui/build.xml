<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  @file   build.xml
  @brief  Ant configuration file for the SBML Test Runner GUI.
  @author Michael Hucka
  @author Frank T. Bergmann
 
  This file is part of the SBML Testsuite. Please visit http://sbml.org for
  more information about SBML, and the latest version of the SBML Test Suite.
 -->

<project basedir="." default="jar" name="testsuite-ui">

  <!-- ========================================================================
       IMPORTANT   IMPORTANT   IMPORTANT   IMPORTANT   IMPORTANT   IMPORTANT

       Certain variables, such as the paths to tools used in this build file,
       are stored externally.  Edit the file "build.properties" to set
       appropriate values for your local environment.  Defaults are defined
       in build-defaults.properties.  If "build.properties" exists, its
       contents override the values in build-defaults.properties.

       As an alternative to editing build.properties, you can also override
       the property values via command-line arguments to ant.  E.g.,

                ant -Dinstallbuilder.dir=/usr/local dist

  ========================================================================= -->

  <property file="build.properties" description="Local build configuration"/>
  <property file="build-defaults.properties" description="Default configuration."/>

  <!-- =================================================================== -->
  <!-- Primary build targets:                                              -->
  <!--                                                                     -->
  <!-- ant jar                                                             -->
  <!--     Creates a self-contained jar file in the subdirectory "dist".   -->
  <!--     Determines platform characteristics automatically.              -->
  <!--     You can run the result using "jar -jar dist/sbmltestrunner.jar" -->
  <!--     on Linux and Windows; on Mac OS X, the result must be executed  -->
  <!--     using "jar -XstartOnFirstThread -jar dist/sbmltestrunner.jar".  -->
  <!--                                                                     -->
  <!-- ant app                                                             -->
  <!--     Creates executable applications that wrap the jar file.         -->
  <!--     On Mac OS X, this creates one 64-bit executable; on Windows and --> 
  <!--     Linux, this creates two executable applications, with one       -->
  <!--     being a 32-bit version and another being a 64-bit version for   -->
  <!--     the current platform.  The result can be executed as a normal   -->
  <!--     application (e.g., by doing-clicking it). On Mac OS X, the      -->
  <!--     application is self-contained, while on Linux and Windows,      -->
  <!--     the result requires Java to be installed on the computer.       -->
  <!--                                                                     -->
  <!-- ant dist                                                            -->
  <!--     Creates an installer for the SBML Test Suite for the current    -->
  <!--     platform. The form of the distribution depends on the platform  -->
  <!--     currently running: on Macs, it creates a .pkg package archive,  -->
  <!--     on Windows it creates a runnable .exe installer, and on Linux   -->
  <!--     it creates 3 different installers (a runnable binary, an RPM    -->
  <!--     package, and a Debian .deb package).                            -->
  <!--                                                                     -->
  <!-- Each of the targets above can be suffixed to create specific        -->
  <!-- versions for particular platforms.  The understood suffixes are:    -->
  <!--                                                                     -->
  <!--   -mac                                                              -->
  <!--   -windows                                                          -->
  <!--   -linux                                                            -->
  <!--                                                                     -->
  <!-- The "jar" and "app" targets also understand the following suffixes: -->
  <!--                                                                     -->
  <!--   -windows-32                                                       -->
  <!--   -windows-64                                                       -->
  <!--   -linux-32                                                         -->
  <!--   -linux-64                                                         -->
  <!--   -mac-64                                                           -->
  <!--                                                                     -->
  <!-- E.g. of invocation: "ant jar-linux-64". (The "ant dist" target does -->
  <!-- not have 32-bit and 64-bit variants; for simplicity and user        -->
  <!-- convenience, the distribution archives always contain both the 32   -->
  <!-- and 64-bit variants, except on OS X, where it's always 64-bit.)     -->
  <!-- =================================================================== -->

  <path id="core.classpath">
    <pathelement location="${core.dir}/build" />
  </path>
  <path id="testsuite-ui.classpath">
    <pathelement location="build" />
    <path refid="core.classpath" />
    <pathelement location="./libs/swt.jar" />
    <pathelement location="./libs/libswt-awt-cocoa-4745.jnilib" />
    <pathelement location="./libs/libswt-cocoa-4745.jnilib" />
    <pathelement location="./libs/libswt-pi-cocoa-4745.jnilib" />
    <pathelement location="./libs/libswt-xulrunner-cocoa-4745.jnilib" />
    <pathelement location="./libs/jna-3.5.2.jar" />
    <pathelement location="./libs/platform-3.5.2.jar" />
    <pathelement location="./libs/org.swtchart_0.7.0.v20110128.jar" />
    <pathelement location="./libs/opal-0.9.5.1.jar" />
    <pathelement location="${core.dir}/libs/simple-xml-2.6.4.jar"/>
  </path>

  <condition property="isWindows" value="true">
    <os family="windows" />
  </condition>
  <condition property="isLinux" value="true">
    <and>
      <os family="unix" />
      <not>
        <os family="mac" />
      </not>
    </and>
  </condition>
  <condition property="isMac" value="true">
    <os family="mac" />
  </condition>

  <!-- The next condition tests the JVM only, not the OS. -->
  <condition property="is64Bit" value="true">
    <contains string="${os.arch}" substring="64"/>
  </condition>
  <condition property="is32Bit" value="true">
    <not>
      <contains string="${os.arch}" substring="64"/>
    </not>
  </condition>

  <target name="init">
    <loadfile property="app.version" srcFile="${app.version.file}">
      <filterchain>
        <deletecharacters chars="\r\n\f"/>
      </filterchain>
    </loadfile>
    <tstamp>
      <format property="timestamp" pattern="yyyy-MM-dd HH:mm zzz"/>
    </tstamp>
    <mkdir dir="${dist.dir}" />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build.dest}" />
    <echo message="Tags file: ${app.tags.descriptions.file}" />
    <copy file="${app.tags.descriptions.file}"
          todir="org/sbml/testsuite/ui/resources"
          overwrite="true"/>
  </target>

  <target name="make-html-files"> 
    <exec executable="grip">
      <arg value="../../../../README.md"/>
      <arg value="--export"/>
      <arg value="${build.dir}/README.html"/>
    </exec>
    <exec executable="grip">
      <arg value="../../../../NEWS.md"/>
      <arg value="--export"/>
      <arg value="${build.dir}/NEWS.html"/>
    </exec>
  </target>

  <target name="add-misc-files" depends="make-html-files"> 
    <copy file="../../../../LICENSE.html" 
          todir="${build.dir}" overwrite="true"/>
    <copy file="../../../../COPYING.html" 
          todir="${build.dir}" overwrite="true"/>
  </target>

  <target name="clean">
    <delete dir="${dist.dir}" />
    <delete dir="${build.dir}" />
    <delete dir="${build.dest}" />
    <delete file="sbmltestrunner.jar"/>
    <delete file="../testsuite-ui.jar"/>
  </target>
  <target name="cleanall" depends="clean">
    <ant antfile="build.xml" dir="${core.dir}" inheritAll="false" target="clean" />
  </target>
  <target name="clean-jar">
    <delete file="${dist.dir}/sbmltestrunner.jar" />
  </target>

  <target name="build" depends="build-subprojects, build-project" />
  <target name="build-subprojects">
    <echo message="Building dependent subproject" />
    <echo message="${core.dir}"/>
    <ant antfile="build.xml" dir="${core.dir}" inheritAll="false" target="jar" />
  </target>
  <target name="build-project" depends="init">
    <echo message="Now building ${ant.project.name}" />
    <echo message="${ant.file}"/>
    <javac debug="true" debuglevel="${debuglevel}" destdir="${build.dest}"
           source="${java.source}" target="${java.target}" includeantruntime="no">
      <src path="src" />
      <classpath refid="testsuite-ui.classpath" />
      <compilerarg value="-Xlint:unchecked"/>
    </javac>
  </target>

  <!-- =================================================================== -->
  <!-- Jars                                                                -->
  <!--                                                                     -->
  <!-- Basic invocation: "ant jar"                                         -->
  <!--                                                                     -->
  <!-- These bundle up dependent libraries and make it possible for a user -->
  <!-- to execute "java -jar sbmltestrunner.jar" to start the app.         -->
  <!-- =================================================================== -->

  <target name="jar"          depends="jar-mac-auto, jar-win-auto, jar-linux-auto" />

  <target name="jar-mac"      depends="jar-mac-auto-32, jar-mac-auto-64" />
  <target name="jar-win"      depends="jar-win-auto-32, jar-win-auto-64" />
  <target name="jar-linux"    depends="jar-linux-auto-32, jar-linux-auto-64" />

  <target name="jar-mac-32"   depends="swt-osx-32, jar-common"/>
  <target name="jar-mac-64"   depends="swt-osx-64, jar-common" />

  <target name="jar-win-32"   depends="swt-win-32, jar-common" />
  <target name="jar-win-64"   depends="swt-win-64, jar-common" />

  <target name="jar-linux-32" depends="swt-linux-32, jar-common" />
  <target name="jar-linux-64" depends="swt-linux-64, jar-common" />

  <!-- The following targets are internal. -->

  <target name="jar-mac-auto"      if="isMac">
    <antcall target="jar-mac" />
  </target>
  <target name="jar-mac-auto-32"   if="is32Bit">
    <antcall target="jar-mac-32" />
  </target>
  <target name="jar-mac-auto-64"   if="is64Bit">
    <antcall target="jar-mac-64" />
  </target>

  <target name="jar-win-auto"      if="isWindows">
    <antcall target="jar-win" />
  </target>
  <target name="jar-win-auto-32"   if="is32Bit">
    <antcall target="jar-win-32" />
  </target>
  <target name="jar-win-auto-64"   if="is64Bit">
    <antcall target="jar-win-64" />
  </target>

  <target name="jar-linux-auto"    if="isLinux">
    <antcall target="jar-linux" />
  </target>
  <target name="jar-linux-auto-32" if="is32Bit">
    <antcall target="jar-linux-32" />
  </target>
  <target name="jar-linux-auto-64" if="is64Bit">
    <antcall target="jar-linux-64" />
  </target>

  <target name="swt-win-32">
    <property name="swt.file" value="libs/swt-win32.jar"/>
  </target>
  <target name="swt-win-64">
    <property name="swt.file" value="libs/swt-win64.jar"/>
  </target>
  <target name="swt-linux-32">
    <property name="swt.file" value="libs/swt-linux-x86.jar"/>
  </target>
  <target name="swt-linux-64">
    <property name="swt.file" value="libs/swt-linux-x64.jar"/>
  </target>
  <target name="swt-osx-32">
    <property name="swt.file" value="libs/swt.jar"/>
  </target>
  <target name="swt-osx-64">
    <property name="swt.file" value="libs/swt.jar"/>
  </target>

  <target name="jar-common" depends="build">
    <copy todir="${build.dest}" overwrite="true">
      <fileset dir="src" includes="org/sbml/testsuite/ui/resources/**" />
    </copy>
    <touch file="${build.dest}/org/sbml/testsuite/ui/resources/help/VERSION-${app.version}"/>
    <jar destfile="${dist.dir}/sbmltestrunner.jar">
      <manifest>
        <attribute name="Main-Class" value="${app.main.class}"/>
        <attribute name="Implementation-Title" value="${app.name}" />
        <attribute name="Implementation-Version" value="${app.version}" />
        <attribute name="Built-Timestamp" value="${timestamp}" />
        <attribute name="Built-By" value="${user.name}" />
      </manifest>
      <zipgroupfileset file="${core.dir}/dist/testsuite-core.jar"/>
      <zipgroupfileset file="libs/jna-3.5.2.jar" />
      <zipgroupfileset file="libs/platform-3.5.2.jar" />
      <zipgroupfileset file="libs/opal-0.9.5.1.jar"/>
      <zipgroupfileset file="libs/org.swtchart_0.7.0.v20110128.jar"/>
      <zipgroupfileset file="libs/simple-xml-2.6.4.jar"/>
      <zipgroupfileset file="${swt.file}"/>
      <fileset dir="libs" includes="*.jnilib" />
      <fileset dir="${build.dest}" includes="**" />
    </jar>
  </target>


  <!-- =================================================================== -->
  <!-- Applications                                                        -->
  <!--                                                                     -->
  <!-- Basic invocation: "ant app"                                         -->
  <!--                                                                     -->
  <!-- On Macs, this requires JarBundler, http://informagen.com/JarBundler -->
  <!-- On Windows, this requires Frank's modified Launch4j                 -->
  <!-- =================================================================== -->

  <target name="app" depends="app-mac-auto, app-win-auto, app-linux-auto" />

  <target name="app-mac-auto"    if="isMac">
    <antcall target="app-mac-normal"/>
  </target>
  <target name="app-mac-auto-32" if="isMac">
    <antcall target="app-mac-normal-32"/>
  </target>
  <target name="app-mac-auto-64" if="isMac">
    <antcall target="app-mac-normal-64"/>
  </target>

  <!-- Targets for Mac OS X. -->

  <target name="app-mac"    depends="app-mac-normal"/>

  <target name="app-mac-normal"    depends="app-mac-normal-64"/>

  <target name="app-mac-normal-64">
    <antcall target="jar-mac-64"/>
    <antcall target="app-mac-normal-common">
      <param name="os" value=""/>
      <param name="os.extra" value=" x64"/>
      <param name="jvmarchs" value="x86_64"/>
    </antcall>
    <antcall target="clean-jar"/>
  </target>

  <target name="app-mac-normal-common" depends="init">
    <delete dir="${dist.dir}/${app.name}.app" failonerror="false"/>
    <mkdir dir="${dist.dir}" />
    <copy file="${build.dir}/sbmltestrunner.jar"
          todir="${dist.dir}"
          overwrite="true"/>
    <mkdir dir="${basedir}/package/macosx" />
    <copy file="${basedir}/dev/app-builders/macos/javapackager-config/Info.plist"
          todir="${basedir}/package/macosx"
          overwrite="true"/>
    <exec executable="/usr/libexec/java_home" outputproperty="jre.path" />
    <exec executable="javapackager">
      <arg value="-deploy"/>
      <arg value="-native" />
      <arg value="image" />
      <arg value="-v" />
      <arg value="-nosign" />
      <arg value="-name" />
      <arg value="${app.name}" />
      <arg value="-title" />
      <arg value="${app.name}" />
      <arg value="-srcdir" />
      <arg value="${build.dir}" />
      <arg value="-appclass" />
      <arg value="${app.main.class}" />
      <arg value="-srcfiles" />
      <arg value="sbmltestrunner.jar" />
      <arg value="-outdir" />
      <arg value="${dist.dir}" />
      <arg value="-Bicon=${app.icon.icns}" />
      <arg value="-Bruntime=${jre.path}" />
      <arg value="-BappVersion=3.3.0" />
      <arg value="-outfile" />
      <arg value="ignore-not-used" />
    </exec>
    <!-- javapackager insists on putting the results into a "bundles" subir. -->
    <move file="${dist.dir}/bundles/${app.name}.app"
          todir="${dist.dir}" overwrite="true"/>
    <delete dir="${dist.dir}/bundles" failonerror="false"/>
    <!-- Clean up some things we don't use from javapackager. -->
    <delete file="${dist.dir}/ignore-not-used.html" failonerror="false"/>
    <delete file="${dist.dir}/ignore-not-used.jnlp" failonerror="false"/>
    <delete dir="${basedir}/package" failonerror="false"/>
  </target>


  <!-- Targets for Windows. -->

  <target name="app-win" depends="app-win-32, app-win-64"/>

  <target name="app-win-auto"    if="isWindows">
    <antcall target="app-win-32"/>
    <antcall target="app-win-64"/>
  </target>
  <target name="app-win-auto-32" if="isWindows">
    <antcall target="app-win-32"/>
  </target>
  <target name="app-win-auto-64" if="isWindows">
    <antcall target="app-win-64"/>
  </target>

  <target name="app-win-32" depends="init">
    <antcall target="jar-win-32"/>
    <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask"
             classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
    <launch4j configFile="dev/app-builders/windows/SBML_Test_Runner_launch4j_x86_config.xml" />
    <antcall target="clean-jar"/>
  </target>
  <target name="app-win-64" depends="init">
    <antcall target="jar-win-64"/>
    <taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask"
             classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
    <launch4j configFile="dev/app-builders/windows/SBML_Test_Runner_launch4j_x64_config.xml" />
    <antcall target="clean-jar"/>
  </target>


  <!-- Targets for Linux. -->

  <target name="app-linux" depends="app-linux-32, app-linux-64"/>

  <target name="app-linux-auto"    if="isLinux">
    <antcall target="app-linux-32"/>
    <antcall target="app-linux-64"/>
  </target>
  <target name="app-linux-auto-32" if="isLinux">
    <antcall target="app-linux-32"/>
  </target>
  <target name="app-linux-auto-64" if="isLinux">
    <antcall target="app-linux-64"/>
  </target>

  <target name="app-linux-32">
    <antcall target="jar-linux-32"/>
    <antcall target="app-linux-common">
      <param name="os" value="linux"/>
      <param name="bits" value="x86"/>
    </antcall>
    <antcall target="clean-jar"/>
  </target>
  <target name="app-linux-64">
    <antcall target="jar-linux-64"/>
    <antcall target="app-linux-common">
      <param name="os" value="linux"/>
      <param name="bits" value="x64"/>
    </antcall>
    <antcall target="clean-jar"/>
  </target>

  <target name="app-linux-common" depends="init">
    <exec executable="cat" output="${dist.dir}/${app.name.nospace}-${os}-${bits}">
      <arg value="dev/app-builders/linux/bootstrap.sh"/>
      <arg value="${dist.dir}/sbmltestrunner.jar"/>
    </exec>
    <exec executable="chmod">
      <arg value="+x"/>
      <arg value="${dist.dir}/${app.name.nospace}-${os}-${bits}"/>
    </exec>
  </target>


  <!-- =================================================================== -->
  <!-- Distributions                                                       -->
  <!--                                                                     -->
  <!-- Basic invocation: "ant dist"                                        -->
  <!-- On Windows, this requires (1) NSIS and (2) NSIS Ant Task.           -->
  <!-- On Linux, this requires InstallBuilder.                             -->
  <!-- =================================================================== -->

  <!-- The following targets are meant to be invoked by users.             -->

  <target name="dist" depends="dist-mac-auto, dist-win-auto, dist-linux-auto"/>

  <target name="dist-mac-auto" if="isMac">
    <antcall target="dist-mac"/>
  </target>
  <target name="dist-win-auto" if="isWindows">
    <antcall target="dist-win"/>
  </target>
  <target name="dist-linux-auto" if="isLinux">
    <antcall target="dist-linux"/>
  </target>

  <!-- The following targets are internal and not really meant for users -->

  <target name="dist-mac" depends="init, make-html-files, add-misc-files">
    <antcall target="app-mac-normal"/>
    <exec executable="packagesbuild">
      <arg value="dev/app-builders/macos/packages-config/SBML Test Runner/SBML Test Runner.pkgproj"/>
    </exec>
    <move file="${dist.dir}/${app.name}.pkg"
          tofile="${dist.dir}/${app.name}-${app.version}.pkg" overwrite="true"/>
  </target>


  <!-- Targets for Windows. -->

  <target name="dist-win" depends="init">
    <antcall target="app-win"/>
    <taskdef name="nsis" classname="com.danielreese.nsisant.Task">
      <classpath location="dev/app-builders/windows/nsisant-1.3.jar"/>
    </taskdef>
    <nsis script="dev/app-builders/windows/NSIS_SBML_Test_Runner.nsi"
          verbosity="4" noconfig="yes" nocd="yes">
      <define name="NAME" value="${app.name}"/>
      <define name="VERSION" value="${app.version}"/>
      <define name="WEBSITE" value="${app.website}"/>
      <define name="DIST_DIR" value="${dist.dir}"/>
      <scriptcmd cmd="AutoCloseWindow true"/>
    </nsis>
  </target>


  <!-- Targets for Linux. -->

  <target name="dist-linux" depends="init">
    <antcall target="app-linux"/>
    <antcall target="dist-linux-common">
      <param name="dist.linux.action" value="linux"/>
    </antcall>
    <antcall target="dist-linux-common">
      <param name="dist.linux.action" value="linux-x64"/>
    </antcall>
    <antcall target="dist-linux-common">
      <param name="dist.linux.action" value="rpm"/>
    </antcall>
    <antcall target="dist-linux-common">
      <param name="dist.linux.action" value="deb"/>
    </antcall>
  </target>

  <target name="dist-linux-common">
    <exec executable="${installbuilder.dir}/bin/builder">
      <arg value="build"/>
      <arg value="dev/app-builders/linux/installbuilder-linux-config.xml"/>
      <arg value="${dist.linux.action}"/>
      <arg value="--setvars"/>
      <arg value="basedir=${basedir}"/>
      <arg value="project.outputDirectory=${dist.dir}"/>
      <arg value="project.version=${app.version}"/>
    </exec>
  </target>


  <!-- =================================================================== -->
  <!-- Other targets                                                       -->
  <!-- =================================================================== -->

  <target name="start-win-32" depends="swt-win-32">
    <java fork="true" jar="${dist.dir}/sbmltestrunner.jar" />
  </target>
  <target name="start-win-64" depends="swt-win-64">
    <java fork="true" jar="${dist.dir}/sbmltestrunner.jar" />
  </target>
  <target name="start-linux-32" depends="swt-linux-32">
    <java fork="true" jar="${dist.dir}/sbmltestrunner.jar" />
  </target>
  <target name="start-linux-64" depends="swt-linux-64">
    <java fork="true" jar="${dist.dir}/sbmltestrunner.jar" />
  </target>
  <target name="start-osx-32" depends="swt-osx-32">
    <java fork="true" jar="${dist.dir}/sbmltestrunner.jar" >
      <arg value="-d32"/>
      <arg value="-XstartOnFirstThread"/>
    </java>
  </target>
  <target name="start-osx-64" depends="swt-osx-64">
    <java fork="true" jar="${dist.dir}/sbmltestrunner.jar">
      <arg value="-XstartOnFirstThread"/>
      <arg value='-Xdock:name="${app.name}"'/>
    </java>
  </target>

</project>
